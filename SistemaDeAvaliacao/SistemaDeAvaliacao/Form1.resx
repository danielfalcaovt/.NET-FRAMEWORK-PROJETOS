<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P7+HVTsGPiAXAAAAAElFTkSuQmCC
</value>
  </data>
</root>